{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { PaginatedResult, init, helix, Stream } from '@twitch-stat-bot/twitch';\nimport {\n  KafkaConfig,\n  TwitchConfig,\n  KafkaConfigOpt,\n  TwitchConfigOpt,\n  defaultValues,\n  FileConfig,\n  FileConfigOpt,\n} from '@twitch-stat-bot/common';\nimport pino from 'pino';\nimport { Kafka, Message, ProducerBatch, TopicMessages } from 'kafkajs';\nimport { parse, ArgumentConfig } from 'ts-command-line-args';\n\ninterface FetcherConfig {\n  topic: string[];\n  minViewers: number;\n}\n\nconst FetcherConfigOpt: ArgumentConfig<FetcherConfig> = {\n  topic: { type: String, multiple: true, defaultValue: [defaultValues.topic] },\n  minViewers: { type: Number, defaultValue: 5 },\n};\n\ninterface Config extends FetcherConfig, KafkaConfig, TwitchConfig, FileConfig {}\n\nconst logger = pino().child({ module: 'stream-fetcher' });\n\n(async () => {\n  const config: Config = parse<Config>(\n    {\n      ...FetcherConfigOpt,\n      ...KafkaConfigOpt,\n      ...TwitchConfigOpt,\n      ...FileConfigOpt,\n    },\n    {\n      loadFromFileArg: 'config',\n    }\n  );\n\n  await init(config);\n\n  const kafka = new Kafka({\n    clientId: config.kafkaClientId,\n    brokers: config.kafkaBroker,\n  });\n  const producer = kafka.producer();\n\n  let result: PaginatedResult<Stream>;\n  let cursor: string | undefined = undefined;\n  let params: { first: number; after?: string } = { first: 100 };\n  let count = 0;\n  let page = 0;\n\n  do {\n    if (cursor != null) {\n      params.after = cursor;\n    }\n    const log = logger.child({\n      cursor,\n      page,\n    });\n    page++;\n    result = await helix<PaginatedResult<Stream>>('streams', params);\n    count += result.data.length;\n    log.info(`result cound: ${result.data.length}`);\n    if (result.data.length > 0) {\n      log.info(\n        `viewer count ${result.data[result.data.length - 1].viewer_count}`\n      );\n\n      const time = new Date().toISOString();\n      let messages: TopicMessages[] = [];\n      for (let i = 0; i < config.topic.length; ++i) {\n        let topicMessage: TopicMessages = {\n          topic: config.topic[i],\n          messages: [],\n        };\n        for (let i = 0; i < result.data.length; ++i) {\n          const stream = result.data[i];\n          log.debug(stream, 'kafka.producer.stream');\n          topicMessage.messages.push({\n            key: 'stream',\n            value: JSON.stringify(stream),\n            timestamp: time,\n          });\n        }\n      }\n      await producer.sendBatch({ topicMessages: messages });\n    }\n    if (\n      result.data &&\n      result.data.length > 0 &&\n      result.data[result.data.length - 1].viewer_count &&\n      result.data[result.data.length - 1].viewer_count < config.minViewers\n    ) {\n      log.debug('last cursor');\n      let messages: TopicMessages[] = [];\n      for (let i = 0; i < config.topic.length; ++i) {\n        messages.push({\n          topic: config.topic[i],\n          messages: [\n            {\n              key: 'stream',\n              value: null,\n            },\n          ],\n        });\n      }\n      await producer.sendBatch({ topicMessages: messages });\n      break;\n    }\n  } while (cursor);\n})();\n"]}